/* Copyright (c) 2024 Nordic Semiconductor ASA
 *
 * SPDX-License-Identifier: LicenseRef-Nordic-5-Clause
 */

 #include <thingy91x_nrf53_wifi.dtsi>

 /{
    aliases{
     accel0 = &accelerometer_hp;
     accel1 = &accelerometer_lp;
    //  mag0 = &magnetometer;   // magnetometer bmm350 is not yet properly implemented in zeephyr
     env0 = &bme680;
     pwm-led0 = &rgb_red_pwm_led;
     pwm-led1 = &rgb_green_pwm_led;
     pwm-led2 = &rgb_blue_pwm_led;
     red-pwm-led = &rgb_red_pwm_led;
     green-pwm-led = &rgb_green_pwm_led;
     blue-pwm-led = &rgb_blue_pwm_led;
    };
};

 &usbd {
     compatible = "nordic,nrf-usbd";
     status = "okay";
 };
 
 / {
     chosen {
         zephyr,console = &cdc_acm_uart0;
         zephyr,shell-uart = &cdc_acm_uart0;
         zephyr,uart-mcumgr = &cdc_acm_uart0;
         zephyr,bt-mon-uart = &cdc_acm_uart0;
         zephyr,bt-c2h-uart = &cdc_acm_uart0;
         nordic,pm-ext-flash = &flash_ext;
     };

     pwmleds {
        compatible = "pwm-leds";
        rgb_red_pwm_led: pwm_led0 {
            pwms = <&pwm0 0 PWM_MSEC(20) PWM_POLARITY_NORMAL>;
        };
        rgb_green_pwm_led: pwm_led1 {
            pwms = <&pwm0 1 PWM_MSEC(20) PWM_POLARITY_NORMAL>;
        };
        rgb_blue_pwm_led: pwm_led2 {
            pwms = <&pwm0 2 PWM_MSEC(20) PWM_POLARITY_NORMAL>;
        };
    };
 };
 
 &rtt0 {
     status = "disabled";
 };
 
 
 /* Enable external flash */
 &flash_ext{
     status = "okay";
 };
 
 &spi3{
     status = "okay";
     accelerometer_hp: bmi270@2 {
         status = "okay";
     };
 };

 &i2c2 {
	status = "okay";
	bme680: bme680@76 {
		status = "okay";
	};
	accel: accelerometer_lp: adxl367@1d {
		status = "okay";
	};
	// magnetometer: bmm350@14 {
	// 	status = "okay";
	// };
};

&pmic_main {
	status = "okay";
	npm1300_gpios {
		status = "okay";
	};
	regulators {
		status = "okay";
	};
	charger {
		status = "okay";
	};
};

&pinctrl {
    pwm0_default: pwm0_default {
        group1 {
            psels = <NRF_PSEL(PWM_OUT0, 0, 14)>,
                    <NRF_PSEL(PWM_OUT1, 0, 26)>,
                    <NRF_PSEL(PWM_OUT2, 0, 15)>;
        };
    };

    pwm0_sleep: pwm0_sleep {
        group1 {
            psels = <NRF_PSEL(PWM_OUT0, 0, 14)>,
                    <NRF_PSEL(PWM_OUT1, 0, 26)>,
                    <NRF_PSEL(PWM_OUT2, 0, 15)>;
            low-power-enable;
        };
    };
};

&pwm0 {
    status = "okay";
    pinctrl-0 = <&pwm0_default>;
    pinctrl-1 = <&pwm0_sleep>;
    pinctrl-names = "default", "sleep";
};
        
